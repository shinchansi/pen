import nltk
from nltk import tokenize 
grammar1 = nltk.CFG.fromstring(""" 
S -> VP 
 VP -> VP NP 
 NP -> Det NP 
 Det -> 'that' 
 NP -> singular Noun 
 NP -> 'flight' 
 VP -> 'Book' 
 """) 
sentence = "Book that flight" 
for index in range(len(sentence)):
    all_tokens = tokenize.word_tokenize(sentence) 
print(all_tokens) 
parser = nltk.ChartParser(grammar1) 
for tree in parser.parse(all_tokens):
    print(tree)
    tree.draw() 







import nltk 
from nltk import tokenize 
grammar1 = nltk.CFG.fromstring(""" 
S -> NP VP 
PP -> P NP 
 NP -> Det N | Det N PP | 'I' 
 VP -> V NP | VP PP 
 Det -> 'a' | 'my' 
N -> 'bird' | 'balcony' 
V -> 'saw' 
P -> 'in' 
 """) 
sentence = "I saw a bird in my balcony" 
for index in range(len(sentence)):
    all_tokens = tokenize.word_tokenize(sentence) 
print(all_tokens) 
# all_tokens = ['I', 'saw', 'a', 'bird', 'in', 'my', 'balcony'] 
parser = nltk.ChartParser(grammar1) 
for tree in parser.parse(all_tokens):
    print(tree)
    tree.draw()